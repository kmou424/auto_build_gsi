# This is a basic workflow to help you get started with Actions

name: Build_SGSI

on:
  workflow_dispatch:
  watch:
    types: [started]

env:
  token: ${{ secrets.BOT_TOKEN }}
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
       - name: Checkout
         uses: actions/checkout@master

       - name: Prepare for variables
         run: |
           bash sgsi_pre.sh
       
       - name: Clean Up
         run: |       
           docker rmi `docker images -q`
           sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
           sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
           sudo -E apt-get update
           sudo -E apt-get -y autoremove --purge
           sudo -E apt-get clean
           df -h
           
       - name: Setting up the SPICES
         run: |
           sudo apt-get install -y git wget git zip unzip curl axel

       - name: Cloning...
         run: |
           git clone https://github.com/xiaoxindada/SGSI-build-tool.git -b 12 $GITHUB_WORKSPACE/SGSI-build-tool
           
       - name: Download zip...
         run: |
           cd $GITHUB_WORKSPACE/SGSI-build-tool
           mkdir ./tmp
           axel -n $(nproc) -U "Mozilla/5.0" ${{ env.FIRMWARE_LINK }} -o "$GITHUB_WORKSPACE/SGSI-build-tool/tmp/update.zip" || wget -U "Mozilla/5.0" ${{ env.FIRMWARE_LINK }} -O "$GITHUB_WORKSPACE/SGSI-build-tool/tmp/update.zip"
           echo "zip_file: $(ls "$GITHUB_WORKSPACE/SGSI-build-tool/tmp/")"
            
       - name: Setup Tool Utils...
         run: |
           sudo sed -i 's/USE_MIRROR_FOR_PIP\=true/USE_MIRROR_FOR_PIP\=false/' $GITHUB_WORKSPACE/SGSI-build-tool/setup.sh
           sudo bash $GITHUB_WORKSPACE/SGSI-build-tool/setup.sh
           sudo apt-get -y --purge remove "adoptopenjdk-11-hotspot"
           java -version
           mkdir -p $GITHUB_WORKSPACE/output
            
       - name: Building AB DEVICES SGSI...
         run: |
           sudo bash $GITHUB_WORKSPACE/SGSI-build-tool/make.sh --AB ${{ env.FIRMWARE_OS }} update.zip --fix-bug

       - name: Repack AB output file ...
         run: |            
           cd $GITHUB_WORKSPACE/SGSI-build-tool/SGSI
           pwd
           7za a -t7z -r  ${{ env.FIRMWARE_OS }}-AB-${{ env.DATE }}.7z *
           mv *.7z $GITHUB_WORKSPACE/output/*
           cd $GITHUB_WORKSPACE/output
           ls ${{ env.FIRMWARE_OS }}-AB-${{ env.DATE }}.7z
           rm -rf $GITHUB_WORKSPACE/SGSI-build-tool/SGSI/*
           cd $GITHUB_WORKSPACE/SGSI-build-tool

       - name: Building Aonly DEVICES SGSI...
         run: |
           sudo bash $GITHUB_WORKSPACE/SGSI-build-tool/make.sh --a-only ${{ env.FIRMWARE_OS }} update.zip --fix-bug     

       - name: Repack Aonly output file ...
         run: |            
           cd $GITHUB_WORKSPACE/SGSI-build-tool/SGSI
           pwd
           7za a -t7z -r  ${{ env.FIRMWARE_OS }}-Aonly-${{ env.DATE }}.7z *
           mv *.7z $GITHUB_WORKSPACE/output/*
           cd $GITHUB_WORKSPACE/output
           ls ${{ env.FIRMWARE_OS }}-Aonly-${{ env.DATE }}.7z
           rm -rf $GITHUB_WORKSPACE/SGSI-build-tool/SGSI/*
           cd $GITHUB_WORKSPACE/SGSI-build-tool

       - name: Upload SGSI to action-gh-release...
         uses: softprops/action-gh-release@v1
         with:
           files: ${{ github.workspace }}/output/*.7z
           name: ${{ env.RELEASE_TAG }}-xiaoxin
           tag_name: ${{ env.RELEASE_TAG }}-xiaoxin
           #body: Use actions auto bulid
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}           

       - name: Upload
         run: |
           cd $GITHUB_WORKSPACE
           source upload.sh
         env:
           RELEASE_TAG_NAME: ${{ env.RELEASE_TAG }}
